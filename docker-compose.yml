version: "3.9"

services:

  minio:
    image: minio/minio
    volumes:
      - sprint_5_minio_data:/data
      - ./docker/minio/cors-config.json:/root/.minio/cors/config.json
    expose:
      - 9000
      - 9001
    ports:
      - "${MINIO_PUBLIC_PORT:-9000}:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001/minio/health/live" ]
      interval: 5s
      timeout: 20s
      retries: 100
    command: server --console-address :9001 /data
    networks:
      - sprint_5_network

  sprint_5_postgres_db:
    container_name: sprint_5_postgres_db
    image: postgres:15.1-alpine
    volumes:
      - sprint_5_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: sprint_5
      POSTGRES_USER: sprint_5
      POSTGRES_PASSWORD: sprint_5
    expose:
      - 5432
    ports:
      - "${DB_PUBLIC_PORT:-5432}:5432"
    networks:
      - sprint_5_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sprint_5" ]
      interval: 5s
      timeout: 20s
      retries: 100

  sprint_5_app:
    container_name: sprint_5_app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CONFIG_FILE: "config.yaml"
    entrypoint: "./entrypoint.sh"
    volumes:
      - ./src:/app/src/
    networks:
      - sprint_5_network
    ports:
      - "${APP_PUBLIC_PORT:-8000}:8000"
    depends_on:
      sprint_5_postgres_db:
        condition: service_healthy
      minio:
        condition: service_healthy

networks:
  sprint_5_network:
    name: sprint_5_network

volumes:
  sprint_5_postgres_data:
    driver: local
  sprint_5_minio_data:
    driver: local
